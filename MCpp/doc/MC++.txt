/*!

@mainpage MC++ (version 1.0): Toolkit for Bounding Factorable Functions

@author Benoit C. Chachuat <tt>(b.chachuat@imperial.ac.uk)</tt>
@date 2006-2013

MC++ (version 1.0) provides a collection of C++ classes for bounding factorable functions, including interval bounds, convex/concave relaxations, Taylor model estimators, and spectral bounds. The implementation of MC++ relies on operator/function overloading and templates. Our main emphasis in developing MC++ is to make the computation of bounds as simple and natural as possible, similar to computing function values in real arithmetics. In particular, we hope that you will find MC++ most useful for the fast prototyping and testing of new algorithms and ideas, for instance in areas such as global and robust optimization.


\section sec_MC_install How Do I Install and Test MC++?

MC++ is released as open source code under the <A href="http://www.eclipse.org/legal/epl-v10.html">Eclipse Public License (EPL)</A>.

MC++ depends on the following third-party libraries:, which are provided in <tt>src/3rdparty/</tt>:
- <A href="http://www.fadbad.com/fadbad.html">FADBAD++</A> (version 2.1) to enable combination of bounding techniques in MC++ with automatic differentiation (AD), which is <b>provided</b> in <tt>src/3rdparty/fadbad++/</tt>;
- <A href="http://www.netlib.org/blas/">BLAS</A> and <A href="http://www.netlib.org/lapack/">LAPACK</A> (version 4.3) for linear algebra computations, which are <b>not included</B> in the MC++ distribution.
.
It is strongly recommended that the following software packages be also installed (and used):
- <A href="http://www.ti3.tu-harburg.de/Software/PROFILEnglisch.html">PROFIL</A> and/or <A href="http://www.math.uni-wuppertal.de/~xsc/software/filib.html">FILIB++</A> to perform verified interval computation
- <A href="http://sourceforge.net/apps/mediawiki/cppunit/index.php?title=Main_Page">CppUnit</A> for unit testing of the various features in MC++
.

On distribution, the main directory should contain the files <TT>AUTHORS</TT>, <TT>CHANGELOG</TT>, <TT>INSTALL</TT>, <TT>LICENSE</TT> and <TT>README</TT>, as well as 3 subdirectories:
- <tt>src</tt> contains the source code of MC++, which consists of header files only; that is, there is no need to build or link a library.
- <tt>doc</tt> contains the Doxygen documentation for MC++, which can be accessed by opening the file <tt>doc/html/index.html</tt> with your favorite browser.
- <tt>examples</tt> contains simple examples that should help you understand how to use the types of MC++.
.

<CENTER><TABLE border="1">
<TR>
<TD><CENTER><TABLE BORDER=0>
  <TR>
  <TD>MC++ has been developed and tested primarily under Linux</TD>
  </TR>
  <TR>
  <TD>The tests and examples should compile without warnings with: <a href="http://gcc.gnu.org/"><tt>gcc</tt></a> (ver. 4.6), <a href="http://software.intel.com/en-us/intel-compilers"><tt>icpc</tt></a> (ver. 13.1)</TD>
  </TR>
  <TR>
  <TD>Compatibility issues may arise due to the wrapper to <A href="http://www.netlib.org/lapack/">LAPACK</A> routine <tt>dsyev</tt>.
  </TR>
  <TR>
  <TD>This wrapper (<tt>mc::dsyev_wrapper</tt>) is in file <tt>mclapack.hpp</tt> and should be modified if needs be.
  </TR>
  </TABLE></CENTER></TD>
</TR>
</TABLE></CENTER> 

To install the library, cd into the <tt>src</tt> directory, and type:

<tt>
> make install
</tt>

This creates the <tt>include</tt> directory (if not yet existing) as well as symbolic links to the header files in this directory.

Running MC++ requires that you alter the <TT>makefile</TT> in <TT>src</TT> in order to point to the above-mentioned third-party libraries on your computer. If the library <A href="http://sourceforge.net/apps/mediawiki/cppunit/index.php?title=Main_Page">CppUnit</A> is available on your computer, unit testing can then be run by typing:
 
<tt>
> make test
</tt>

In order to remove all symbolic links created in the <tt>include</tt> directory and clean the <tt>src</tt> directory, type

<tt>
> make cleaninstall
</tt>


\section sec_MC_doc Where Can I Find More Information About the Features of MC++?

A description of the main components of MC++ can be found under <A HREF="pages.html">Related Pages</A>:
- \ref page_INTERVAL
- \ref page_MCCORMICK
- \ref page_SPECBND
- \ref page_TAYLOR
.

\section sec_MC_examples How Do I Run the Examples of MC++?

Change into the <tt>examples</tt> directory, and select one of the subdirectories, e.g.

<tt>
> cd examples/MC-1D
</tt>

At the command line, type:

<tt>
> make
</tt>

to create the executable file <tt>MC-1D</tt> and run it as:

<tt>
> ./MC-1D
</tt>

This executable generates a file containing the McCormick relaxations and subgradients called <tt>MC-1D.out</tt>. If the plotting program <A href="http://www.gnuplot.info/">GNUPLOT</A> is installed on your computer, the resulting bounds and relaxations can be visualized by typing:

<tt>
> gnuplot MC-1D.g
</tt>

<CENTER><TABLE border="1">
<TR>
<TD><CENTER><TABLE BORDER=0>
  <TR>
  <TD>We hope you will enjoy using MC++ and find it useful!</TD>
  </TR>
  <TR>
  <TD> For more information or to provide us feedback, please email <a href="mailto:b.chachuat@imperial.ac.uk">Benoit Chachuat</a></TD>
  </TR>
  </TABLE></CENTER></TD>
</TR>
</TABLE></CENTER> 


\section sec_MC_references References

A selection of papers which describe or use MC++ are:
- Bompadre, A., A. Mitsos, <A href="http://dx.doi.org/10.1007/s10898-011-9685-2">Convergence rate of McCormick relaxations</A>, <I>Journal of Global Optimization</I> <B>52</B>(1):1-28, 2012
- Bompadre, A., A. Mitsos, and B. Chachuat, <A href="http://dx.doi.org/10.1007/s10898-012-9998-9">Convergence analysis of Taylor models and McCormick-Taylor models</A>, <i>Journal of Global Optimization</i>, <b>in press</b>, October 2012
- Houska, B., M.E. Villanueva, B. Chachuat, <A href="http://cdc2013.units.it/index.php">A validated integration algorithm for nonlinear ODEs using Taylor models and ellipsoidal calculus</A>, <I>52nd IEEE Conference on Decision and Control (CDC)</I>, December 10-13, 2013, Florence, Italy
- Mitsos, A., B. Chachuat, and P.I. Barton, <A href="http://dx.doi.org/10.1137/080717341">McCormick-based relaxations of algorithms</A>, <i>SIAM Journal on Optimization</i>, <b>20</b>(2):573-601, 2009
- Sahlodin, M.A., and B. Chachuat, <A href="http://dx.doi.org/10.1016/j.compchemeng.2011.01.031">Convex/concave relaxations of parametric ODEs using Taylor models</A>, <i>Computers & Chemical Engineering</i>, <b>35</b>(5):844-857, 2011
- Scott, J.K., M.D. Stuber, P.I. Barton, <A href="http://dx.doi.org/10.1007/s10898-011-9664-7">Generalized McCormick relaxations</A>. <i>Journal of Global Optimization</i>, <b>51</b>(4), 569-606, 2011
- Tsoukalas, A., and A. Mitsos, <A href="http://www.optimization-online.org/DB_HTML/2012/05/3473.html">Multi-variate McCormick relaxations</A>, May 2012
- Wechsung, A., and P.I. Barton, <A href="http://dx.doi.org/10.1007/s10898-013-0060-3">Global optimization of bounded factorable functions with discontinuities</A>, <i>Journal of Global Optimization</i>, <b>in press</b>, 2013
.

*/

